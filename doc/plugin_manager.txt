*plugin_manager.txt*  A Git submodule-based plugin manager for Vim/Neovim

===============================================================================
CONTENTS                                                *plugin-manager-contents*

    1. Introduction ............................ |plugin-manager-introduction|
    2. Installation ............................ |plugin-manager-installation|
    3. Configuration ........................... |plugin-manager-configuration|
    4. Commands ................................ |plugin-manager-commands|
    5. Usage Examples .......................... |plugin-manager-examples|
    6. Keyboard Shortcuts ...................... |plugin-manager-shortcuts|
    7. Tips & Tricks ........................... |plugin-manager-tips|
    8. Troubleshooting ......................... |plugin-manager-troubleshooting|
    9. License ................................. |plugin-manager-license|
    10. About .................................. |plugin-manager-about|

===============================================================================
1. INTRODUCTION                                     *plugin-manager-introduction*

PluginManager is a simple but powerful plugin management solution for Vim and
Neovim that uses Git submodules to manage plugins. It follows Vim 8's native
package structure and provides an easy-to-use interface for managing plugins.

Features:
- Native package management without dependencies
- Full Git integration for plugin versioning
- Easy backup and restore functionality
- Support for optional (lazy-loaded) plugins
- Interactive sidebar interface
- Helptags generation
- Compatible with both Vim and Neovim

===============================================================================
2. INSTALLATION                                     *plugin-manager-installation*

Prerequisites:
- Vim 8+ or Neovim
- Git

First, ensure your Vim/Neovim configuration is a Git repository:
>
    cd ~/.vim  # or ~/.config/nvim for Neovim
    git init
<
Then, download the plugin and place it in your plugin directory:
>
    mkdir -p ~/.vim/plugin
    curl -o ~/.vim/plugin/plugin_manager.vim \
        https://raw.githubusercontent.com/username/vim-plugin-manager/main/plugin_manager.vim
<
For directory structure compatibility, also create these directories:
>
    mkdir -p ~/.vim/pack/plugins/start
    mkdir -p ~/.vim/pack/plugins/opt
<
===============================================================================
3. CONFIGURATION                                   *plugin-manager-configuration*

PluginManager works with minimal configuration, but you can customize its
behavior with the following global variables:

*g:plugin_manager_vim_dir*       The directory of your Vim configuration.
                               Default: '~/.vim' or '~/.config/nvim'

*g:plugin_manager_plugins_dir*   The directory where plugins are installed.
                               Default: '~/.vim/pack/plugins'

*g:plugin_manager_start_dir*     Directory for auto-loaded plugins.
                               Default: 'start'

*g:plugin_manager_opt_dir*       Directory for optional (lazy-loaded) plugins.
                               Default: 'opt'

*g:plugin_manager_vimrc_path*    Path to your vimrc file.
                               Default: '~/.vim/vimrc' or '~/.config/nvim/init.vim'

*g:plugin_manager_sidebar_width* Width of the sidebar in columns.
                               Default: 60

*g:plugin_manager_default_git_host* Default git host for short plugin names.
                                  Default: 'github.com'

===============================================================================
4. COMMANDS                                           *plugin-manager-commands*

The plugin provides the following commands:

:PluginManager                   Show usage information

:PluginManager add <plugin> [options]
                                Install a new plugin
                                <plugin> can be a URL or 'username/repo'
                                [options] can be a dictionary with these keys:
                                  'dir': custom directory name (default: plugin name)
                                  'load': 'start' or 'opt' (default: 'start')
                                  'branch': git branch to checkout
                                  'tag': git tag to checkout
                                  'exec': command to execute after installation

                                For backward compatibility:
                                PluginManager add <plugin> [modulename] [opt]

:PluginManager remove <plugin> [-f]
                                Remove a plugin
                                Use -f to force removal without confirmation

:PluginManager list              List all installed plugins

:PluginManager status            Show status of installed plugins

:PluginManager update [plugin]   Update all plugins or a specific one

:PluginManager backup            Backup configuration to git remotes

:PluginManager restore           Reinstall all plugins from .gitmodules

:PluginManager helptags [plugin] Generate helptags for all or specific plugin

:PluginManager summary           Show a summary of plugin changes

:PluginManager reload [plugin]   Reload a specific plugin or all configuration

:PluginManagerRemote <url>       Add a remote repository for backups

:PluginManagerToggle             Toggle the plugin manager sidebar

===============================================================================
5. USAGE EXAMPLES                                     *plugin-manager-examples*

Install a plugin from GitHub:
>
    :PluginManager add tpope/vim-fugitive
<
Install a plugin with a custom name:
>
    :PluginManager add tpope/vim-surround surround
<
Install an optional (lazy-loaded) plugin:
>
    :PluginManager add junegunn/fzf.vim fzf opt
<
Install a plugin from a custom URL:
>
    :PluginManager add https://gitlab.com/user/repo.git
<
Install a plugin with custom options:
>
    :PluginManager add tpope/vim-fugitive {'dir':'fugitive', 'load':'start', 'branch':'main'}
<
Install a plugin with a specific tag and run a command:
>
    :PluginManager add junegunn/fzf {'tag':'0.24.0', 'exec':'./install --all'}
<
Update all plugins:
>
    :PluginManager update
<
Update a specific plugin:
>
    :PluginManager update vim-fugitive
<
Remove a plugin:
>
    :PluginManager remove vim-fugitive
<
Force remove a plugin:
>
    :PluginManager remove vim-fugitive -f
<
Add a backup remote:
>
    :PluginManagerRemote https://github.com/username/vim-config.git
<
Reload a specific plugin:
>
    :PluginManager reload vim-fugitive
<
Reload all Vim configuration:
>
    :PluginManager reload
<
===============================================================================
6. KEYBOARD SHORTCUTS                                *plugin-manager-shortcuts*

The following keyboard shortcuts are available in the PluginManager sidebar:

q       Close the sidebar
l       List installed plugins
u       Update all plugins
h       Generate helptags for all plugins
s       Show status of submodules
b       Backup configuration
r       Restore all plugins
R       Reload configuration
?       Show usage information

===============================================================================
7. TIPS & TRICKS                                          *plugin-manager-tips*

Backup Your Configuration:
It's recommended to set up a remote repository and use `:PluginManager backup`
regularly to ensure your configuration is safe.

Loading Optional Plugins:
Optional plugins installed with the 'opt' parameter can be loaded with:
>
    :packadd plugin-name
<
You can also load them conditionally in your vimrc:
>
    if has('feature')
      packadd plugin-name
    endif
<
Managing Plugin Updates:
When updating plugins, PluginManager will stash any local changes in the plugin
repositories. If you've made custom modifications to plugins, consider using
a different approach like git patches.

===============================================================================
8. TROUBLESHOOTING                             *plugin-manager-troubleshooting*

Issues with Plugin Installation:
- Make sure your Vim configuration directory is a Git repository
- Check that you have write permissions to the plugin directories
- Verify the plugin URL is correct and accessible

Plugin Not Loading:
- For 'start' plugins, ensure they're in the correct directory
- For 'opt' plugins, make sure you're using `:packadd` to load them
- Reload your vimrc after installing new plugins

Git-related Errors:
- Most issues are related to Git submodule commands
- Run `:PluginManager status` to check the status of all modules
- Try running `:PluginManager restore` to reinitialize all modules

===============================================================================
9. LICENSE                                             *plugin-manager-license*

PluginManager is released under the MIT License.
Copyright (c) 2025 G.K.E. <gke@6admin.io>

See LICENSE file or plugin header for full license text.

===============================================================================
10. ABOUT                                                *plugin-manager-about*

Maintained by: G.K.E. <gke@6admin.io>
Source: https://github.com/username/vim-plugin-manager
Version: 1.3

 vim:tw=78:ts=8:ft=help:norl: